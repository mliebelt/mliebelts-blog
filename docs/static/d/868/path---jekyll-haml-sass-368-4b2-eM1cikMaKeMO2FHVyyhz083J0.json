{"data":{"site":{"siteMetadata":{"title":"mliebelt Starter Blog","author":"Markus Liebelt"}},"markdownRemark":{"id":"69dd58d5-5e04-57cc-a12d-84f96a3d7f5f","excerpt":"Working with HAML and SASS for blogging with Jekyll   I started to work with Rails version 1.2, and have migrated since numerous times.\n  In between, I switched…","html":"<h1>Working with HAML and SASS for blogging with Jekyll</h1>\n<p>  I started to work with Rails version 1.2, and have migrated since numerous times.\nIn between, I switched from ERB and pure CSS to HAML and SASS, and liked it\nmuch more. So this documents the (naive) way to use HAML and SASS.</p>\n<h2>First try</h2>\n<p>  Started to create a file\n<code class=\"language-text\">2014-10-31-jekyll-haml-sass.haml</code>\n(this file) and\nentered there as usual the sparse markup of HAML. At least IntelliJ knew how\nto work with it (but the preview was not usable, so I will search for a plugin\nwhen being online again). As usual,  <code class=\"language-text\">jekyll serve --drafts</code>\nwas running, and\ncompiled the file when it changed.</p>\n<p>  But the result was not to my liking:</p>\n<ul>\n<li>the resulting file name was named  <code class=\"language-text\">2014-10-31-jekyll-haml-sass.html</code>\n(which is ok).</li>\n<li>the layout of the file was ok, (so the embedding worked).</li>\n<li>BUT: the content was not translated at all.</li>\n</ul>\n<h2>Second try</h2>\n<p>  So i read about\n<code class=\"language-text\">jekyll sass integration</code> and\n<code class=\"language-text\">jekyll haml integration</code>\nand found the 2 plugins\n<code class=\"language-text\">jekyll-sass</code>\nand\n<code class=\"language-text\">jekyll-haml</code>. The recipe for me looked like:</p>\n<ol>\n<li>\n<p>Include in your file\n<code class=\"language-text\">_config.yml</code>\nthe following statement:\n<code class=\"language-text\">gems: [&quot;jekyll-haml&quot;, &quot;jekyll-sass&quot;]</code></p>\n</li>\n<li>\n<p>Ensure that the gems are installed, by using\n<code class=\"language-text\">gem install jekyll-haml</code> … or by using\n<code class=\"language-text\">bundle install</code>.</p>\n</li>\n<li>\n<p>Is that the only possible way? Of course not …\nAt least with SASS, you could the way which is nice described in\n<code class=\"language-text\">Scalable and Modular Architecture for CSS</code>\nor short SMACSS.</p>\n<p>Run SASS in a command shell:\n%code sass —watch before:after\nwhere  <code class=\"language-text\">before</code>  and <code class=\"language-text\">after</code>\nare the directories that include the source SASS files, and the resulting CSS files.\nFinally, you are able to compile your files by\n<code class=\"language-text\">sass -t compressed master.scss master.css</code>\ninto one file.</p>\n</li>\n</ol>\n<h2>Working with HAML</h2>\n<p>  Working with HAML is now pretty straightforward. Just create new blog posts with\nthe ending <code class=\"language-text\">.haml</code>, and you are ready to go. Don’t forget the YAML front-matter\nsection in your page, this is the same compared to using markup as format.</p>\n<p>  Every change now in the file leads to a compilation, where your jekyll-haml plugin\nis used to compile your sources. So the <code class=\"language-text\">.html</code> files are generated\nas usual in your <code class=\"language-text\">_site</code> directory.</p>\n<h2>Working with HAML and GitHub.io</h2>\n<p>  This is a little bit more complicated. At the moment, GitHub does not use the plugins\nyou have installed on your computer locally. Therefore, when pushing your changes\nto your GitHub repository, the <code class=\"language-text\">jekyll-haml</code> plugin is not used,\nso you have to ensure that the compilation is done locally on your computer,\nand that you push the results to your GitHub.io repository.</p>\n<p>  In my case, I had to change the following:</p>\n<ul>\n<li>Instead of publishing an article by moving it from directory <code class=\"language-text\">_drafts</code>\nto <code class=\"language-text\">_posts</code>, I have to copy the resulting file (like\n<code class=\"language-text\">_site/jekyll/2014/10/31/2014-10-31-jekyll-haml-sass.html</code> to\nfile <code class=\"language-text\">jekyll/2014/10/31/jekyll-haml-sass.html</code>, which is really\nerror prune.</li>\n<li>Every time I change something in a template (like <code class=\"language-text\">post.html</code>) which\nwill result in a regeneration of all posts, I have to remember which posts\nto copy again to the resulting directory.\nAs a result, I will have to use a real build process additionally to Jekyll and\nGitHub.io to get a smooth deployment process of my blog posts.</li>\n</ul>\n<h2>Working with SASS and GitHub.io</h2>\n<p>  The SASS integration works in a similar way to HAML:</p>\n<ul>\n<li>\n<p>I started by creating from the original file <code class=\"language-text\">styles.css</code> the file\n<code class=\"language-text\">style.scss</code> (see the difference). The trick here is, that every\nCSS file is automatically legal SCSS file, so you can just rename it.</p>\n</li>\n<li>\n<p>The moment I save it, the jekyll compiler (with the support of the SASS plugin)\ngenerates the file <code class=\"language-text\">styles.css</code> in the directory <code class=\"language-text\">_site/stylesheets</code>.</p>\n</li>\n<li>\n<p>So when I commit my changes in the original directory <code class=\"language-text\">stylesheets</code>,\nand push them then to GitHub.io, they will not be transated there.\nI has therefore to ensure that the files that were generated locally are copied then\nto the target directory, and pushed then to GitHub.io. Tedious, but there is no other\nway to ensure that you are able to work with SASS locally and have it be published on\nGitHub.io.</p>\n<p>The story here is a little bit simpler than HAML, because CSS allows to aggregate\nthe files by doing something like that in e.g. a file <code class=\"language-text\">master.scss</code>:\n%pre= “@import ”base”, ”states”, ”layout/twocolumn”;”</p>\n</li>\n</ul>","frontmatter":{"title":"Jekyll with HAML and SASS","date":"October 31, 2014","tags":["jekyll","blog"]}}},"pageContext":{"slug":"/jekyll-haml-sass/","previous":{"fields":{"slug":"/passwords/"},"frontmatter":{"title":"Passwords in the company world","path":"/passwords","tags":["company"]}},"next":{"fields":{"slug":"/migration-to-pg/"},"frontmatter":{"title":"Migrating from Sqlite3 to PostgreSQL for Rails application","path":"/migration-to-pg","tags":["rails","sqlite3","postgresql"]}}}}