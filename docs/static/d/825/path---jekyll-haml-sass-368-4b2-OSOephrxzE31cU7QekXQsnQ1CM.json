{"data":{"site":{"siteMetadata":{"title":"mliebelt Starter Blog","author":"Markus Liebelt"}},"markdownRemark":{"id":"69dd58d5-5e04-57cc-a12d-84f96a3d7f5f","excerpt":"  Working with HAML and SASS for blogging with Jekyll","html":"<!doctype html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"chrome=1\">\n    <title>Jekyll with HAML and SASS</title>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;link rel=&quot;stylesheet&quot; href=&quot;/stylesheets/master.css&quot;&gt;\n&lt;link rel=&quot;stylesheet&quot; href=&quot;/stylesheets/pygment_trac.css&quot;&gt;\n&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1, user-scalable=no&quot;&gt;\n&lt;!--[if lt IE 9]&gt;\n&lt;script src=&quot;//html5shiv.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;\n&lt;![endif]--&gt;</code></pre></div>\n</head>\n<body class=\"category-jekyll\">\n<div class=\"wrapper\">\n    <header>\n        <h1>All Blogs</h1>\n        <ul>\n            <li><a href=\"/index-01c227b20f4b62c48ff905c0426b7b8c.html\">Homepage</a></li>\n            <li><a href=\"/company.html\">Big Companies and Tools</a></li>\n            <li><a href=\"/lesenreading.html\">Lesen / Reading</a></li>\n            <li><a href=\"/jekyll.html\">Blogging with Jekyll</a></li>\n            <!--\n                        <li><a href=\"development.html\">Development</a></li>\n            -->\n        </ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    &lt;h2 class=&quot;clear&quot;&gt;Others&lt;/h2&gt;\n    &lt;ul&gt;\n        &lt;li&gt;&lt;a href=&quot;/projects.html&quot;&gt;My projects&lt;/a&gt;&lt;/li&gt;\n    &lt;/ul&gt;\n\n&lt;/header&gt;\n&lt;section&gt;\n    &lt;h1&gt;Jekyll with HAML and SASS&lt;/h1&gt;\n\n    &lt;h2&gt;</code></pre></div>\n<p>  Working with HAML and SASS for blogging with Jekyll</p>\n</h2>\n<p>\n  I started to work with Rails version 1.2, and have migrated since numerous times.\n  In between, I switched from ERB and pure CSS to HAML and SASS, and liked it\n  much more. So this documents the (naive) way to use HAML and SASS.\n</p>\n<h3>First try</h3>\n<p>\n  Started to create a file\n  <code>2014-10-31-jekyll-haml-sass.haml</code>\n  (this file) and\n  entered there as usual the sparse markup of HAML. At least IntelliJ knew how\n  to work with it (but the preview was not usable, so I will search for a plugin\n  when being online again). As usual,\n  <code>jekyll serve --drafts</code>\n  was running, and\n  compiled the file when it changed.\n</p>\n<p>\n  But the result was not to my liking:\n</p>\n<ul>\n  <li>the resulting file name was named</li>\n  <code>2014-10-31-jekyll-haml-sass.html</code>\n  (which is ok).\n  <li>the layout of the file was ok, (so the embedding worked).</li>\n  <li>BUT: the content was not translated at all.</li>\n</ul>\n<h3>Second try</h3>\n<p>\n  So i read about\n  <code>jekyll sass integration</code>\n  and\n  <code>jekyll haml integration</code>\n  and found the 2 plugins\n  <code>jekyll-sass</code>\n  and\n  <code>jekyll-haml</code>\n  . The recipe for me looked like:\n</p>\n<ol>\n  <li>\n    Include in your file\n    <code>_config.yml</code>\n    the following statement:\n    <code>gems: [\"jekyll-haml\", \"jekyll-sass\"]</code>\n  </li>\n  <li>\n    Ensure that the gems are installed, by using\n    <code>gem install jekyll-haml</code>\n    ... or by using\n    <code>bundle install</code>\n    .\n  </li>\n</ol>\n<p>\n  Is that the only possible way? Of course not ...\n  At least with SASS, you could the way which is nice described in\n  <code>Scalable and Modular Architecture for CSS</code>\n  or short SMACSS.\n</p>\n<blockquote>\n  Run SASS in a command shell:\n  <code>sass --watch before:after</code>\n  where\n  <code>before</code>\n  and\n  <code>after</code>\n  are the directories that include the source SASS files, and the resulting CSS files.\n  Finally, you are able to compile your files by\n  <code>sass -t compressed master.scss master.css</code>\n  into one file.\n</blockquote>\n<h3>Working with HAML</h3>\n<p>\n  Working with HAML is now pretty straightforward. Just create new blog posts with\n  the ending <code>.haml</code>, and you are ready to go. Don't forget the YAML front-matter\n  section in your page, this is the same compared to using markup as format.\n</p>\n<p>\n  Every change now in the file leads to a compilation, where your jekyll-haml plugin\n  is used to compile your sources. So the <code>.html</code> files are generated\n  as usual in your <code>_site</code> directory.\n</p>\n<h3>Working with HAML and GitHub.io</h3>\n<p>\n  This is a little bit more complicated. At the moment, GitHub does not use the plugins\n  you have installed on your computer locally. Therefore, when pushing your changes\n  to your GitHub repository, the <code>jekyll-haml</code> plugin is not used,\n  so you have to ensure that the compilation is done locally on your computer,\n  and that you push the results to your GitHub.io repository.\n</p>\n<h3>Working with SASS and GitHub.io</h3>\n<p>\n  The SASS integration works in a similar way to HAML:\n  <ul>\n    <li>\n      I started by creating from the original file <code>styles.css</code> the file\n      <code>style.scss</code> (see the difference). The trick here is, that every\n      CSS file is automatically legal SCSS file, so you can just rename it.\n    </li>\n    <li>\n      The moment I save it, the jekyll compiler (with the support of the SASS plugin)\n      generates the file <code>syles.css</code> in the directory <code>_site/stylesheets</code>.\n    </li>\n    <li>\n      So when I commit my changes in the original directory <code>stylesheets</code>,\n      and push them then to GitHub.io, they will not be transated there.\n    </li>\n  </ul>\n  I has therefore to ensure that the files that were generated locally are copied then\n  to the target directory, and pushed then to GitHub.io. Tedious, but there is no other\n  way to ensure that you are able to work with SASS locally and have it be published on\n  GitHub.io.\n</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;/section&gt;\n&lt;footer&gt;\n    &lt;p class=&quot;view&quot;&gt;&lt;a href=&quot;https://github.com/mliebelt&quot;&gt;View My GitHub Profile&lt;/a&gt;&lt;/p&gt;\n&lt;/footer&gt;</code></pre></div>\n</div>\n<script src=\"/javascripts/scale.fix.js\"></script>\n</body>\n</html>","frontmatter":{"title":"","date":null}}},"pageContext":{"slug":"/jekyll-haml-sass/","previous":{"fields":{"slug":"/migration-to-pg/"},"frontmatter":{"title":"Migrating from Sqlite3 to PostgreSQL for Rails application"}},"next":null}}