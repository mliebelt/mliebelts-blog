{"version":3,"sources":["webpack:///./src/pages/books.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/bio.js","webpack:///./src/components/author.js"],"names":["BookIndex","render","data","this","props","siteTitle","site","siteMetadata","title","books","allMarkdownRemark","edges","filter","post","node","frontmatter","posttype","draft","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","location","_components_seo__WEBPACK_IMPORTED_MODULE_5__","keywords","_components_bio__WEBPACK_IMPORTED_MODULE_3__","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","map","_ref","fields","slug","key","style","marginBottom","rhythm","_components_author__WEBPACK_IMPORTED_MODULE_6__","author","boxShadow","padding","lineHeight","date","tags","tag","link","margin","float","marginRight","src","cover","publicURL","width","dangerouslySetInnerHTML","__html","excerpt","clear","React","Component","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","query","children","Error","propTypes","PropTypes","object","string","isRequired","func","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_lawton__WEBPACK_IMPORTED_MODULE_1__","typography_theme_lawton__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","lawtonTheme","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Layout","header","_this$props","__PATH_PREFIX__","react__WEBPACK_IMPORTED_MODULE_2___default","marginTop","gatsby__WEBPACK_IMPORTED_MODULE_3__","textDecoration","color","fontFamily","marginLeft","maxWidth","SEO","description","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","bioQuery","Bio","_data$site$siteMetada","social","display","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fixed","avatar","childImageSharp","alt","minWidth","borderRadius","href","twitter","_public_static_d_4046613625_json__WEBPACK_IMPORTED_MODULE_1__","gatsby__WEBPACK_IMPORTED_MODULE_1__","_","Author","url","kebabCase"],"mappings":"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","file":"component---src-pages-books-js-4e01df926c32709c5882.js","sourcesContent":["import React from 'react'\r\nimport { Link, graphql } from 'gatsby'\r\n\r\nimport Bio from '../components/bio'\r\nimport Layout from '../components/layout'\r\nimport SEO from '../components/seo'\r\nimport Author from '../components/author'\r\nimport { rhythm } from '../utils/typography'\r\n\r\nclass BookIndex extends React.Component {\r\n  render() {\r\n    const { data } = this.props;\r\n    const siteTitle = data.site.siteMetadata.title\r\n    const posts = data.allMarkdownRemark.edges\r\n    const books = posts.filter(function(post) { return post.node.frontmatter.posttype === 'book' && ! post.node.frontmatter.draft})\r\n\r\n    return (\r\n      <Layout location={this.props.location} title={siteTitle}>\r\n        <SEO title=\"All books\" keywords={['book']} />\r\n        <Bio />\r\n        <Link to=\"/blogs\">All Blogs</Link>\r\n        {books.map(({ node }) => {\r\n          const title = node.frontmatter.title || node.fields.slug\r\n          return (\r\n            <div key={node.fields.slug}>\r\n              <h3\r\n                style={{\r\n                  marginBottom: rhythm(1 / 4),\r\n                }}\r\n              >\r\n                <Author>{node.frontmatter.author}</Author>:\r\n                <Link style={{ boxShadow: '2px 2px 3px #118888', padding: '2px', lineHeight:  '1.4'}} to={node.fields.slug}>\r\n                  {title}\r\n                </Link>\r\n              </h3>\r\n              <small>{node.frontmatter.date}\r\n              {node.frontmatter.tags.map(tag => {\r\n                const link = \"/tags/\" + tag\r\n                return (\r\n                  <span style={{margin: \"4px\"}} key={tag}>\r\n                    <Link to={link}>{tag}</Link>\r\n                  </span>\r\n                )\r\n              })\r\n              }</small>\r\n              <img style={{float: \"left\", marginRight: rhythm(1)}} src={node.frontmatter.cover.publicURL} width=\"80px\"></img>\r\n              <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\r\n              <div style={{clear: \"both\"}}></div>\r\n            </div>\r\n          )\r\n        })}\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BookIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            author\r\n            draft\r\n            tags\r\n            posttype\r\n            cover {\r\n             publicURL\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import Typography from 'typography'\r\n// import Wordpress2016 from 'typography-theme-wordpress-2016'\r\n\r\n// Wordpress2016.overrideThemeStyles = () => ({\r\n//   'a.gatsby-resp-image-link': {\r\n//     boxShadow: 'none',\r\n//   },\r\n// })\r\n\r\n// delete Wordpress2016.googleFonts\r\n\r\n// const typography = new Typography(Wordpress2016)\r\n\r\n// import bootstrapTheme from \"typography-theme-bootstrap\"\r\n// const typography = new Typography(bootstrapTheme)\r\n\r\nimport lawtonTheme from \"typography-theme-lawton\"\r\nconst typography = new Typography(lawtonTheme)\r\n\r\n// Hot reload typography in development.\r\nif (process.env.NODE_ENV !== 'production') {\r\n  typography.injectStyles()\r\n}\r\n\r\nexport default typography\r\nexport const rhythm = typography.rhythm\r\nexport const scale = typography.scale\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n\r\nimport { rhythm, scale } from '../utils/typography'\r\n\r\nclass Layout extends React.Component {\r\n  render() {\r\n    const { location, title, children } = this.props\r\n    const rootPath = `${__PATH_PREFIX__}/`\r\n    let header\r\n\r\n    if (location.pathname === rootPath) {\r\n      header = (\r\n        <h1\r\n          style={{\r\n            ...scale(1.5),\r\n            marginBottom: rhythm(1.5),\r\n            marginTop: 0,\r\n          }}\r\n        >\r\n          <Link\r\n            style={{\r\n              boxShadow: 'none',\r\n              textDecoration: 'none',\r\n              color: 'inherit',\r\n            }}\r\n            to={'/'}\r\n          >\r\n            {title}\r\n          </Link>\r\n        </h1>\r\n      )\r\n    } else {\r\n      header = (\r\n        <h3\r\n          style={{\r\n            fontFamily: 'Montserrat, sans-serif',\r\n            marginTop: 0,\r\n            marginBottom: rhythm(0),\r\n          }}\r\n        >\r\n          <Link\r\n            style={{\r\n              boxShadow: 'none',\r\n              textDecoration: 'none',\r\n              color: 'inherit',\r\n            }}\r\n            to={'/'}\r\n          >\r\n            {title}\r\n          </Link>\r\n        </h3>\r\n      )\r\n    }\r\n    return (\r\n      <div\r\n        style={{\r\n          marginLeft: 'auto',\r\n          marginRight: 'auto',\r\n          maxWidth: rhythm(30),\r\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\r\n        }}\r\n      >\r\n        {header}\r\n        {children}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Layout\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\n\r\nfunction SEO({ description, lang, meta, keywords, title }) {\r\n  return (\r\n    <StaticQuery\r\n      query={detailsQuery}\r\n      render={data => {\r\n        const metaDescription =\r\n          description || data.site.siteMetadata.description\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{\r\n              lang,\r\n            }}\r\n            title={title}\r\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\r\n            meta={[\r\n              {\r\n                name: 'description',\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: 'og:title',\r\n                content: title,\r\n              },\r\n              {\r\n                property: 'og:description',\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: 'og:type',\r\n                content: 'website',\r\n              },\r\n              {\r\n                name: 'twitter:card',\r\n                content: 'summary',\r\n              },\r\n              {\r\n                name: 'twitter:creator',\r\n                content: data.site.siteMetadata.author,\r\n              },\r\n              {\r\n                name: 'twitter:title',\r\n                content: title,\r\n              },\r\n              {\r\n                name: 'twitter:description',\r\n                content: metaDescription,\r\n              },\r\n            ]\r\n              .concat(\r\n                keywords.length > 0\r\n                  ? {\r\n                      name: 'keywords',\r\n                      content: keywords.join(', '),\r\n                    }\r\n                  : []\r\n              )\r\n              .concat(meta)}\r\n          />\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: 'en',\r\n  meta: [],\r\n  keywords: [],\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  keywords: PropTypes.arrayOf(PropTypes.string),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n\r\nconst detailsQuery = graphql`\r\n  query DefaultSEOQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n        author\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\nimport Image from 'gatsby-image'\r\n\r\nimport { rhythm } from '../utils/typography'\r\n\r\nfunction Bio() {\r\n  return (\r\n    <StaticQuery\r\n      query={bioQuery}\r\n      render={data => {\r\n        const { author, social } = data.site.siteMetadata\r\n        return (\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              marginBottom: rhythm(1),\r\n            }}\r\n          >\r\n            <Image\r\n              fixed={data.avatar.childImageSharp.fixed}\r\n              alt={author}\r\n              style={{\r\n                marginRight: rhythm(1 / 2),\r\n                marginBottom: 0,\r\n                minWidth: 50,\r\n                borderRadius: '100%'\r\n              }}\r\n            />\r\n            <p>\r\n              Written by <strong>{author}</strong> who lives and works near Stuttgart in Germany.{' '}\r\n              <a href={`https://twitter.com/${social.twitter}`}>\r\n                You should follow him on Twitter</a>, or see <a href=\"https://stackexchange.com/users/18210/mliebelt\">\r\n                his stats on Stackoverflow</a>.\r\n              \r\n            </p>\r\n          </div>\r\n        )\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nconst bioQuery = graphql`\r\n  query BioQuery {\r\n    avatar:file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\r\n      childImageSharp {\r\n        fixed(width: 50, height: 50) {\r\n          ...GatsbyImageSharpFixed\r\n        }\r\n      }\r\n    }\r\n    site {\r\n      siteMetadata {\r\n        author\r\n        social {\r\n          twitter\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Bio\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nconst _ = require(\"lodash\")\r\n\r\nfunction Author(props) {\r\n    const name = props.children\r\n    const url = `/authors/${_.kebabCase(name)}`\r\n\r\n    return (\r\n        <Link to={url}>{name}</Link>\r\n    )  \r\n}\r\n\r\nexport default Author"],"sourceRoot":""}